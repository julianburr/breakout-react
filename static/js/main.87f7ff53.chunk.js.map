{"version":3,"sources":["constants.js","App.js","bricks.js","effects.js","paddle.js","ball.js","status.js","store.js","index.js"],"names":["HEIGHT","WIDTH","COLLISION_STEPS","BRICK_COLS","BRICK_ROWS","SPAWN_FREQUENCY","SPAWN_DURATION","App","map","score","useSelector","state","lives","status","paddle","ball","activeEffects","spawnedEffect","_","set","x","Math","round","y","i","width","bricks","forEach","brick","height","style","fontWeight","dispatch","useDispatch","useEffect","setInterval","type","handleKeyDown","e","code","window","addEventListener","clearInterval","removeEventListener","hasRotateGame","find","effect","id","now","Date","display","fontFamily","lineHeight","flexDirection","background","float","Array","from","__","row","key","cell","get","durationLeft","duration","Infinity","time","percent","floor","chars","title","fill","positive","color","generateBricks","push","effects","applyEffectEnd","speed","vx","vy","spawnEffects","length","lastEffectSpawnTime","filter","applyEffect","random","randomX","availableEffects","ae","randomIndex","movePaddle","direction","calculateCollisions","offCenter","abs","sqrt","pow","brickIndex","findIndex","hasBulletBall","checkGameStatus","defaultState","createStore","action","newState","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.87f7ff53.chunk.js","sourcesContent":["export const HEIGHT = 35;\nexport const WIDTH = 61;\n\nexport const SPEED = 0.2;\nexport const COLLISION_STEPS = 10;\n\nexport const BRICK_COLS = 4;\nexport const BRICK_ROWS = 3;\n\nexport const SPAWN_FREQUENCY = 10000;\nexport const SPAWN_DURATION = 10000;\n","import React, { Fragment, useEffect } from 'react';\nimport _ from 'lodash';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { WIDTH, HEIGHT } from './constants';\n\nfunction App () {\n  let map = [];\n\n  const score = useSelector((state) => state.score);\n  const lives = useSelector((state) => state.lives);\n\n  const status = useSelector((state) => state.status);\n  const paddle = useSelector((state) => state.paddle);\n  const ball = useSelector((state) => state.ball);\n  const activeEffects = useSelector((state) => state.activeEffects);\n  const spawnedEffect = useSelector((state) => state.spawnedEffect);\n\n  if (status === 'waiting') {\n    _.set(map, [ HEIGHT - 2, paddle.x + 2 ], '@');\n  } else if (status === 'active') {\n    _.set(map, [ Math.round(ball.y), Math.round(ball.x) ], '@');\n  }\n\n  for (let i = 0; i < paddle.width; i++) {\n    _.set(map, [ HEIGHT - 1, paddle.x + i ], '▀');\n  }\n\n  const bricks = useSelector((state) => state.bricks);\n  bricks.forEach((brick) => {\n    for (let y = brick.y; y < brick.y + brick.height; y++) {\n      for (let x = brick.x; x < brick.x + brick.width; x++) {\n        if (brick.status !== 'hit') {\n          _.set(map, [ y, x ], '█');\n        }\n      }\n    }\n  });\n\n  if (spawnedEffect) {\n    _.set(\n      map,\n      [ HEIGHT - 1, spawnedEffect.x ],\n      <span style={{ fontWeight: 900 }}>?</span>\n    );\n  }\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const i = setInterval(() => dispatch({ type: '@@game/FRAME' }), 16);\n\n    const handleKeyDown = (e) => {\n      switch (e.code) {\n        case 'ArrowLeft':\n          dispatch({ type: '@@key/LEFT' });\n          break;\n        case 'ArrowRight':\n          dispatch({ type: '@@key/RIGHT' });\n          break;\n        case 'Space':\n          dispatch({ type: '@@key/SPACE' });\n          break;\n      }\n    };\n    window.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      clearInterval(i);\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, []);\n\n  const hasRotateGame = activeEffects.find(\n    (effect) => effect.id === 'rotate_game'\n  );\n\n  const now = Date.now();\n\n  return (\n    <div\n      style={{\n        display: 'flex',\n        fontFamily: 'Monaco, monospace',\n        lineHeight: '1'\n      }}\n    >\n      <div\n        style={{\n          display: 'flex',\n          flexDirection: 'column',\n          background: 'rgba(0, 0, 0, .05)',\n          float: 'left'\n        }}\n      >\n        {Array.from(new Array(HEIGHT)).map((__, row) => (\n          <div\n            key={`row-${row}`}\n            style={{\n              display: 'flex',\n              flexDirection: 'row'\n            }}\n          >\n            {Array.from(new Array(WIDTH)).map(\n              (__, cell) =>\n                hasRotateGame\n                  ? _.get(map, [ HEIGHT - 1 - row, WIDTH - 1 - cell ], '·')\n                  : _.get(map, [ row, cell ], '·')\n            )}\n          </div>\n        ))}\n      </div>\n      <div>\n        {Array.from(new Array(18)).map(() => <span>·</span>)}\n        <br />&nbsp;<br />\n        Score: {score}\n        <br />\n        Lives: {lives}\n        <br />&nbsp;<br />\n        {status === 'gameover' ? (\n          'Game Over'\n        ) : (\n          activeEffects.map((effect) => {\n            const durationLeft =\n              effect.duration === Infinity\n                ? null\n                : effect.duration - (now - effect.time);\n            const percent =\n              effect.duration === Infinity || effect.duration === 0\n                ? 18\n                : Math.floor(18 * (durationLeft / effect.duration));\n            const [ ...chars ] = effect.title;\n            return (\n              <Fragment>\n                {Array.from(new Array(18)).map((__, i) => {\n                  const fill = i <= percent;\n                  return (\n                    <span\n                      style={{\n                        background: fill\n                          ? effect.positive ? 'green' : 'red'\n                          : 'none',\n                        color: fill ? 'white' : 'black'\n                      }}\n                    >\n                      {chars[i] || '·'}\n                    </span>\n                  );\n                })}\n                <br />\n              </Fragment>\n            );\n          })\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { BRICK_ROWS, BRICK_COLS } from './constants';\n\nexport function generateBricks () {\n  let bricks = [];\n  for (let y = 0; y < BRICK_ROWS; y++) {\n    for (let x = 0; x < BRICK_COLS; x++) {\n      bricks.push({\n        x: 13 * x + 6,\n        y: 2 * y + 1,\n        width: 10,\n        height: 1,\n        score: 10\n      });\n    }\n  }\n  return bricks;\n}\n","import { SPAWN_FREQUENCY, SPAWN_DURATION, WIDTH } from './constants';\n\nexport const effects = [\n  {\n    id: 'massive_paddle',\n    positive: true,\n    title: 'Massive Paddle',\n    duration: Infinity\n  },\n  {\n    id: 'tiny_paddle',\n    positive: false,\n    title: 'Tiny Paddle',\n    duration: Infinity\n  },\n  {\n    id: 'bullet_ball',\n    positive: true,\n    title: 'Bullet Ball',\n    duration: 15000\n  },\n  {\n    id: 'metal_bricks',\n    positive: false,\n    title: 'Metal Bricks',\n    duration: 15000\n  },\n  {\n    id: 'extra_life',\n    positive: true,\n    title: 'Extra Life',\n    duration: 0\n  },\n  {\n    id: 'lost_life',\n    positive: false,\n    title: 'Lost Life',\n    duration: 0\n  },\n  {\n    id: 'rotate_game',\n    positive: false,\n    title: 'Rotate Game',\n    duration: 20000\n  },\n  {\n    id: 'speed_ball',\n    positive: false,\n    title: 'Speed Ball',\n    duration: Infinity\n  },\n  {\n    id: 'ghost_bricks',\n    positive: false,\n    title: 'Ghost Bricks',\n    duration: 15000\n  }\n];\n\nexport function applyEffect (state, effect) {\n  switch (effect.id) {\n    case 'extra_life':\n      return {\n        ...state,\n        lives: state.lives + 1\n      };\n    case 'lost_life':\n      return {\n        ...state,\n        lives: state.lives - 1\n      };\n    case 'tiny_paddle':\n      return {\n        ...state,\n        paddle: {\n          ...state.paddle,\n          width: state.paddle.width - 2\n        }\n      };\n    case 'massive_paddle':\n      return {\n        ...state,\n        paddle: {\n          ...state.paddle,\n          width: state.paddle.width + 2\n        }\n      };\n    case 'speed_ball':\n      return {\n        ...state,\n        ball: {\n          ...state.ball,\n          speed: state.ball.speed * 1.5,\n          vx: state.ball.vx * 1.5,\n          vy: state.ball.vy * 1.5\n        }\n      };\n    default:\n      return state;\n  }\n}\n\nexport function applyEffectEnd (state, effect) {\n  switch (effect.id) {\n    case 'tiny_paddle':\n      return {\n        ...state,\n        paddle: {\n          ...state.paddle,\n          width: state.paddle.width + 2\n        }\n      };\n    case 'massive_paddle':\n      return {\n        ...state,\n        paddle: {\n          ...state.paddle,\n          width: state.paddle.width - 2\n        }\n      };\n    case 'speed_ball':\n      return {\n        ...state,\n        ball: {\n          ...state.ball,\n          speed: state.ball.speed / 1.5,\n          vx: state.ball.vx / 1.5,\n          vy: state.ball.vy / 1.5\n        }\n      };\n    default:\n      return state;\n  }\n}\n\nexport function spawnEffects (state) {\n  if (state.status !== 'active') {\n    if (state.activeEffects.length) {\n      state.activeEffects.forEach((effect) => {\n        state = applyEffectEnd(state, effect);\n      });\n      return {\n        ...state,\n        activeEffects: [],\n        spawnedEffect: null,\n        lastEffectSpawnTime: null\n      };\n    }\n    return state;\n  }\n\n  const now = Date.now();\n\n  if (state.activeEffects.length) {\n    state.activeEffects.forEach((effect) => {\n      const duration = effect.duration === 0 ? 3000 : effect.duration;\n      if (now - effect.time > duration) {\n        state = applyEffectEnd(state, effect);\n        state = {\n          ...state,\n          activeEffects: state.activeEffects.filter((e) => e !== effect)\n        };\n      }\n    });\n  }\n\n  if (state.spawnedEffect) {\n    if (now - state.spawnedEffect.time > SPAWN_DURATION) {\n      return { ...state, spawnedEffect: null, lastEffectSpawnTime: now };\n    } else if (\n      state.spawnedEffect.x >= state.paddle.x &&\n      state.spawnedEffect.x <= state.paddle.x + state.paddle.width\n    ) {\n      state = applyEffect(state, state.spawnedEffect);\n      return {\n        ...state,\n        spawnedEffect: null,\n        lastEffectSpawnTime: now,\n        activeEffects: [\n          ...state.activeEffects,\n          { ...state.spawnedEffect, time: now }\n        ]\n      };\n    }\n    return state;\n  }\n\n  if (!state.lastEffectSpawnTime) {\n    return { ...state, lastEffectSpawnTime: Date.now() };\n  }\n\n  if (now - state.lastEffectSpawnTime > SPAWN_FREQUENCY) {\n    const random =\n      SPAWN_FREQUENCY + Math.floor(Math.random() * SPAWN_FREQUENCY);\n    if (now - state.lastEffectSpawnTime > random) {\n      const availableEffects = effects.filter(\n        (e) => !state.activeEffects.find((ae) => ae.id === e.id)\n      );\n\n      const randomIndex = Math.floor(\n        Math.random() * (availableEffects.length - 1)\n      );\n\n      let randomX;\n      while (\n        !randomX ||\n        (randomX >= state.paddle.x - 2 &&\n          randomX <= state.paddle.x + state.paddle.width + 2)\n      ) {\n        randomX = Math.floor(Math.random() * (WIDTH - 1));\n      }\n\n      return {\n        ...state,\n        spawnedEffect: {\n          ...availableEffects[randomIndex],\n          time: now,\n          x: randomX\n        }\n      };\n    }\n  }\n\n  return state;\n}\n","import { WIDTH } from './constants';\n\nexport function movePaddle (state) {\n  if (state.paddle.direction === 'left') {\n    return {\n      ...state,\n      paddle: {\n        ...state.paddle,\n        x: state.paddle.x > 0 ? state.paddle.x - 1 : 0,\n        direction: null\n      }\n    };\n  }\n\n  if (state.paddle.direction === 'right') {\n    return {\n      ...state,\n      paddle: {\n        ...state.paddle,\n        x:\n          state.paddle.x < WIDTH - state.paddle.width\n            ? state.paddle.x + 1\n            : WIDTH - state.paddle.width,\n        direction: null\n      }\n    };\n  }\n\n  return state;\n}\n","import { COLLISION_STEPS, BRICK_ROWS, WIDTH, HEIGHT } from './constants';\nimport { generateBricks } from './bricks';\n\nexport function calculateCollisions (state) {\n  if (state.status !== 'active') {\n    return state;\n  }\n\n  let status = state.status;\n  let lives = state.lives;\n  let score = state.score;\n\n  let x = state.ball.x + state.ball.vx / COLLISION_STEPS;\n  let vx = state.ball.vx;\n  if (vx > 0) {\n    if (x > WIDTH - 1) {\n      vx = -vx;\n      x = WIDTH - 1 + vx / COLLISION_STEPS;\n    }\n  } else {\n    if (x < 0) {\n      vx = -vx;\n      x = 0 + vx / COLLISION_STEPS;\n    }\n  }\n\n  let y = state.ball.y + state.ball.vy / COLLISION_STEPS;\n  let vy = state.ball.vy;\n  if (vy > 0) {\n    if (y > HEIGHT - 1) {\n      vy = 0;\n      vx = 0;\n      y = HEIGHT;\n      status = 'waiting';\n      lives -= 1;\n    } else if (\n      Math.round(y) === HEIGHT - 1 &&\n      x >= state.paddle.x &&\n      x <= state.paddle.x + state.paddle.width\n    ) {\n      // hits the paddle\n      const center = state.paddle.x + (state.paddle.width - 1) / 2;\n      const offCenter = center - Math.round(x);\n      if (Math.abs(offCenter) > 0) {\n        vx = -state.ball.speed * offCenter * 0.2;\n      }\n\n      vy =\n        Math.sqrt(Math.pow(state.ball.speed, 2) - Math.pow(vx, 2)) *\n        (vy < 0 ? 1 : -1);\n\n      y = state.ball.y + vy / COLLISION_STEPS;\n      x = state.ball.x + vx / COLLISION_STEPS;\n    }\n  } else {\n    if (y < 0) {\n      vy = -vy;\n      y = state.ball.y + vy / COLLISION_STEPS;\n      x = state.ball.x + vx / COLLISION_STEPS;\n    }\n  }\n\n  let bricks = state.bricks;\n  const brickIndex = bricks.findIndex(\n    (brick) =>\n      x >= brick.x &&\n      x < brick.x + brick.width &&\n      y >= brick.y &&\n      y < brick.y + brick.height &&\n      brick.status !== 'hit'\n  );\n\n  if (brickIndex !== -1) {\n    const hasGhostBricks = state.activeEffects.find(\n      (effect) => effect.id === 'ghost_bricks'\n    );\n\n    if (!hasGhostBricks) {\n      const hasBulletBall = state.activeEffects.find(\n        (effect) => effect.id === 'bullet_ball'\n      );\n      if (!hasBulletBall) {\n        vy = -vy;\n        y = state.ball.y + vy / COLLISION_STEPS;\n        x = state.ball.x + vx / COLLISION_STEPS;\n      }\n      const hasMetalBricks = state.activeEffects.find(\n        (effect) => effect.id === 'metal_bricks'\n      );\n      if (!hasMetalBricks || hasBulletBall) {\n        bricks = [ ...state.bricks ];\n        bricks[brickIndex].status = 'hit';\n        score += bricks[brickIndex].score;\n      }\n    }\n  }\n\n  if (!bricks.find((brick) => brick.status !== 'hit')) {\n    if (state.ball.y > (BRICK_ROWS + 1) * 2) {\n      bricks = generateBricks();\n    }\n  }\n\n  return {\n    ...state,\n    bricks,\n    lives,\n    score,\n    status,\n    ball: { ...state.ball, x, vx, y, vy }\n  };\n}\n","export function checkGameStatus (state) {\n  if (state.lives <= 0) {\n    return { ...state, status: 'gameover', lives: 0, paddle: state.paddle };\n  }\n  return state;\n}\n","import { createStore } from 'redux';\nimport { generateBricks } from './bricks';\nimport { effects, applyEffect, applyEffectEnd, spawnEffects } from './effects';\nimport { movePaddle } from './paddle';\nimport { calculateCollisions } from './ball';\nimport { checkGameStatus } from './status';\nimport { SPEED, WIDTH, HEIGHT, COLLISION_STEPS } from './constants';\n\nconst defaultState = {\n  score: 0,\n  lives: 3,\n  status: 'waiting',\n  ball: { x: 0, y: 0, vx: 0, vy: 0, speed: SPEED },\n  paddle: {\n    x: Math.floor(Math.random() * (WIDTH - 6)),\n    width: 5,\n    direction: null\n  },\n  bricks: generateBricks(),\n  lastEffectSpawnTime: null,\n  spawnedEffect: null,\n  activeEffects: []\n};\n\nconst reducer = (state = defaultState, action) => {\n  switch (action.type) {\n    case '@@key/LEFT':\n      return {\n        ...state,\n        paddle: {\n          ...state.paddle,\n          direction: 'left'\n        }\n      };\n    case '@@key/RIGHT':\n      return {\n        ...state,\n        paddle: {\n          ...state.paddle,\n          direction: 'right'\n        }\n      };\n    case '@@key/SPACE':\n      return state.status === 'gameover'\n        ? defaultState\n        : state.status === 'waiting'\n          ? {\n              ...state,\n              status: 'active',\n              ball: {\n                ...state.ball,\n                y: HEIGHT - 2,\n                x: state.paddle.x + 2,\n                vy: -state.ball.speed,\n                vx: 0\n              }\n            }\n          : state;\n    case '@@game/FRAME':\n      let newState = state;\n\n      newState = movePaddle(newState);\n\n      for (let i = 0; i < COLLISION_STEPS; i++) {\n        newState = calculateCollisions(newState);\n      }\n\n      newState = spawnEffects(newState);\n      newState = checkGameStatus(newState);\n\n      return newState;\n    default:\n      return state;\n  }\n};\n\nexport default createStore(reducer);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport App from './App';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}